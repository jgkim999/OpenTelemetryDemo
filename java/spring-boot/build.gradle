plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.jgkim'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencyManagement {
	imports {
		mavenBom("io.opentelemetry.instrumentation:opentelemetry-instrumentation-bom:2.16.0") // 최신 버전 확인
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-logging'

	implementation 'com.google.code.gson:gson:2.13.1'
	implementation 'net.datafaker:datafaker:2.4.2'

	implementation 'io.opentelemetry.instrumentation:opentelemetry-spring-boot-starter'
	implementation "io.opentelemetry:opentelemetry-api"
	implementation "io.opentelemetry:opentelemetry-sdk"
	implementation "io.opentelemetry:opentelemetry-exporter-otlp"

	// json 형태로 로그 출력
	implementation "ch.qos.logback.contrib:logback-json-classic:0.1.5"
	implementation "ch.qos.logback.contrib:logback-jackson:0.1.5"

	// OTEL Log Exporter whit LOGBACK appender
	implementation "io.opentelemetry.instrumentation:opentelemetry-logback-appender-1.0:2.15.0-alpha"


	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.micrometer:micrometer-registry-otlp'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}
